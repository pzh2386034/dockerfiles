FROM ubuntu:18.04

ARG DEBIAN_FRONTEND=noninteractive

RUN  sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list

RUN apt-get update && apt-get install -yy     debianutils     gawk     git   \
      python     python-dev     python-setuptools     python3     python3-dev     python3-setuptools\
           socat     texinfo     wget     gcc     libffi-dev     libssl-dev     xterm     mwm     ssh \
               vim     iputils-ping     sudo     cpio     unzip     diffstat     expect     curl     build-essential \
                   libpixman-1-0     libglib2.0-0     sshpass     libasound2     libfdt1     libpcre3     openssl     libxml2-dev  \
                      libxslt-dev     python3-pip     ipmitool     xvfb

RUN apt-get update -qqy   && apt-get -qqy --no-install-recommends install firefox  \
     && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/72.0/linux-x86_64/en-US/firefox-72.0.tar.bz2  \
      && apt-get -y purge firefox  \
       && tar -C /opt -xjf /tmp/firefox.tar.bz2 \
         && mv /opt/firefox /opt/firefox-72.0  \
       && ln -fs /opt/firefox-72.0/firefox /usr/bin/firefox

RUN apt-get update && apt-get install -y \
	bash \
	build-essential \
	ca-certificates \
	chrpath \
	curl \
	diffstat \
	gawk \
	git \
	libpixman-1-0 \
	libsdl1.2-dev \
	texinfo 

ENV HOME /home/docker

RUN pip3 install     tox     requests     retrying     websocket-client     json2yaml     robotframework   \
  robotframework-requests     robotframework-sshlibrary     robotframework-scplibrary     pysnmp     redfish   \
    beautifulsoup4 --upgrade     lxml     jsonschema     redfishtool     redfish_utilities     robotframework-httplibrary \
        robotframework-seleniumlibrary     robotframework-xvfb     robotframework-angularjs     scp     selenium==3.141.0     urllib3     xvfbwrapper

RUN wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz       \
  && tar xvzf geckodriver-*.tar.gz     \
      && mv geckodriver /usr/local/bin   \
            && chmod a+x /usr/local/bin/geckodriver

COPY qemu-system-arm  /usr/bin/qemu-system-arm 

RUN mkdir -p /usr/src/openbmc \
    && chmod +x /usr/bin/qemu-system-arm
# RUN curl -sSL -o /usr/src/openbmc/obmc-phosphor-image-romulus.static.mtd https://openpower.xyz/job/openbmc-build/distro=ubuntu,label=builder,target=romulus/lastSuccessfulBuild/artifact/deploy/images/romulus/obmc-phosphor-image-romulus.static.mtd
COPY bmc.static.mtd /usr/src/openbmc/bmc.static.mtd
EXPOSE 2222 22 443 2443

RUN useradd --create-home --shell /bin/bash  docker \
	&& chown -R docker:docker ${HOME} \
    && echo 'root:0penBmc' >> /root/passwdfile \
    && echo 'docker:docker' >> /root/passwdfile \
	&& chpasswd -c SHA512 < /root/passwdfile && \
       rm /root/passwdfile

USER docker



#RUN /bin/bash
ENTRYPOINT ["qemu-system-arm",  "-m", "256", "-M", "romulus-bmc", "-nographic", "-drive", "file=/usr/src/openbmc/bmc.static.mtd,format=raw,if=mtd", "-net", "nic", "-net", "user,hostfwd=:127.0.0.1:2222-:22,hostfwd=:127.0.0.1:2443-:443,hostname=qemu"]
